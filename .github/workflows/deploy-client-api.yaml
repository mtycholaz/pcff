name: Deploy Client Api Service

on:
    push:
        tags:
            - 'deploy*'
            - 'undeploy'
        paths:
            - '.github/workflows/deploy-client-api.yaml'
            - 'apps/client-api/template.yaml'
    workflow_call:
    workflow_dispatch:
        inputs:
            deploy_override:
                description: Set to YES to deploy (else run CI only).
            version:
                description: Provide a version in the format name_r.*.*.*.
env:
    SAM_TEMPLATE: apps/client-api/template.yaml
    REGION: us-east-1
jobs:
    setup:
        name: Setup variables
        runs-on: ubuntu-latest
        outputs:
            branch-name: ${{steps.get-branch-name.outputs.branch-name}}
        permissions:
            id-token: write
            contents: read
        env:
            PIPELINE_EXECUTION_ROLE: ${{ secrets.AWS_PIPELINE_EXEC_ROLE_ARN }}
        steps:
            - uses: actions/checkout@v2

            - name: Assume the pipeline user role
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-region: ${{ env.REGION }}
                  role-to-assume: ${{ env.PIPELINE_EXECUTION_ROLE }}
                  role-duration-seconds: 3600
                  role-skip-session-tagging: true
                  mask-aws-account-id: 'no' # for reasons I don't understand https://github.com/orgs/community/discussions/26636

            - name: Determine branch name
              uses: ./.github/actions/get-branch-name
              id: get-branch-name

    test:
        # deploy when if code is pushed to main OR
        # when code is pushed to any of the feature branch with tag deploy
        name: 'Run unit tests'
        if: (github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_call') || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/deploy'))
        runs-on: ubuntu-latest
        needs: setup
        steps:
            - uses: actions/checkout@v2
            - run: |
                  # trigger the tests here

    delete-feature:
        # delete/ undeploy when code is pushed to a feature branch with tag undeploy
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/undeploy')
        runs-on: ubuntu-latest
        needs: [setup]
        permissions:
            id-token: write
            contents: read
        env:
            PIPELINE_EXECUTION_ROLE: ${{ secrets.AWS_PIPELINE_EXEC_ROLE_ARN }}
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-python@v2
            - uses: aws-actions/setup-sam@v1

            - name: Assume the pipeline user role
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-region: ${{ env.REGION }}
                  role-to-assume: ${{ env.PIPELINE_EXECUTION_ROLE }}
                  role-session-name: cicd-deleting-api
                  role-duration-seconds: 3600
                  role-skip-session-tagging: true

            - name: Delete web stack
              uses: ./.github/actions/delete-api-stack
              with:
                  branch-name: ${{needs.setup.outputs.branch-name}}
                  region: ${{env.REGION}}

    build-and-deploy:
        if: (github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_call') || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/deploy'))
        needs: [test, setup]
        runs-on: ubuntu-latest
        permissions:
            id-token: write
            contents: read
        env:
            PIPELINE_EXECUTION_ROLE: ${{ secrets.AWS_PIPELINE_EXEC_ROLE_ARN }}
            ARTIFACTS_BUCKET: ${{ secrets.AWS_CLOUDFORMATION_ARTIFACTS_BUCKET }}
            BRANCH_NAME: ${{needs.setup.outputs.branch-name}}
            API_STACK_NAME: ${{needs.setup.outputs.branch-name}}-api
        steps:
            - name: Branch Name
              run: echo ${{needs.setup.outputs.branch-name}}

            - uses: actions/checkout@v2
            - uses: actions/setup-python@v2
            - uses: aws-actions/setup-sam@v1

            - name: Install Nodejs v16
              uses: actions/setup-node@v3
              with:
                  node-version: 16

            - name: Install dependencies
              run: npm install -g typescript && npm install

            - name: Compile api
              run: npm run build:client-api #TODO this project doesn't exist yet

            - name: Build SAM template
              run: sam build --template ${{env.SAM_TEMPLATE}} --use-container

            - name: Assume the pipeline user role
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-region: ${{ env.REGION }}
                  role-to-assume: ${{ env.PIPELINE_EXECUTION_ROLE }}
                  role-duration-seconds: 3600
                  role-skip-session-tagging: true

            - name: Upload artifacts to artifact buckets
              run: |
                  sam package \
                    --s3-bucket ${{env.ARTIFACTS_BUCKET}} \
                    --region ${{env.REGION}} \
                    --output-template-file packaged.yaml

            - uses: actions/upload-artifact@v2
              with:
                  name: packaged.yaml
                  path: packaged.yaml

            - name: Deploy to feature stack
              shell: bash
              run: |
                  sam deploy --stack-name ${{env.API_STACK_NAME}} \
                    --template packaged.yaml \
                    --capabilities CAPABILITY_IAM \
                    --region ${{env.REGION}} \
                    --s3-bucket ${{env.ARTIFACTS_BUCKET}} \
                    --no-fail-on-empty-changeset \
                    --role-arn ${{env.PIPELINE_EXECUTION_ROLE}} \
                    --parameter-overrides ParameterKey=Environment,ParameterValue=dev

            - name: Client Deployment Url
              uses: ./.github/actions/get-client-url
              with:
                  branch-name: ${{needs.setup.outputs.branch-name}}
                  region: ${{env.REGION}}
